{"version":3,"sources":["logo.svg","components/Nav.js","components/Hero.js","components/Contact.js","components/Footer.js","components/ProjectCard.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","Navbar","bg","variant","Brand","to","className","Link","Hero","Jumbotron","Row","Col","md","Image","fluid","src","Contact","Form","Group","controlId","Label","Control","type","placeholder","as","rows","Button","Footer","href","class","download","target","ProjectCard","project","name","description","github","deployed","img","Card","style","width","Img","Body","Title","Text","Projects","useState","data","map","i","lg","key","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eaba1e24.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport {Link} from \"react-router-dom\"\nimport {Navbar, Nav as Nav1} from \"react-bootstrap\"\nconst Nav = (props) => {\n    return (\n        <Navbar bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand ><Link to=\"/\">Elliott Lockwood</Link></Navbar.Brand>\n        <Nav1 className=\"mr-auto\">\n          <Nav1.Link ><Link to=\"/\" className=\"nav-item\">Home</Link></Nav1.Link>\n          <Nav1.Link ><Link to=\"/projects\">Projects</Link></Nav1.Link>\n          <Nav1.Link ><Link to=\"/contact\">Contact</Link></Nav1.Link>\n        </Nav1>\n      </Navbar>\n    )\n}\nexport default Nav;\n\n\n\n","import React from \"react\";\nimport {Jumbotron, Row, Col, Image,  md} from \"react-bootstrap\"\nconst Hero = (props) => {\n    return (\n        <Jumbotron className=\"hero\">\n          <Row>\n          <Col md={6}>\n            <h1>Hello! Elliott Lockwood here</h1>\n            <p>\n            After being born and raised in Houston, Texas, I went on to graduate from the University of\n\t\t\t\t\t\t\tKansas in 2012. I spent the next 7 years working offshore and traveling the world. Now I am a student at the UT Austin Coding\n\t\t\t\t\t\t\tBootcamp preperaing for a career in tech!\n            </p>\n          </Col>\n          <Col md={6}>\n            <Image fluid src=\"https://pbs.twimg.com/profile_images/900107838562762752/DRkrjFed_400x400.jpg\" />\n          </Col>\n        </Row>\n      </Jumbotron>\n    )\n}\nexport default Hero;","import React from \"react\";\nimport {Form, Button, Row, Col, md} from 'react-bootstrap';\n\nconst Contact = (props) => {\n    return (\n        <Row>\n            <Col md={6} className=\"mx-auto my-5\">\n                <h1>Contact me!</h1>\n                <Form>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Your Name\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"Your email\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                        <Form.Label>Enter your message</Form.Label>\n                        <Form.Control as=\"textarea\" rows=\"3\" />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                </Form>\n            </Col>\n        </Row>\n    )\n}\n\n\nexport default Contact;","import React from \"react\";\nconst Footer = (props) => {\n    return (\n        <div className=\"footer bg-dark py-4\">\n            <div className=\"footer-wrapper\">\n                <ul className=\"footer-info\">\n                    <li>Elliott Lockwood</li>\n                    <li><a href=\"/src/img/EJL.pdf\" class=\"button\" download> <i class=\"fa fa-download\"></i>Download Resume</a></li>\n                </ul>\n                <ul className=\"footer-media\">\n                    <li><a href=\"https://www.linkedin.com/in/elliottjlockwood\" target=\"_blank\">Linkedin</a></li>\n                    <li><a href=\"https://github.com/elock721\" target=\"_blank\">Github</a></li>\n                </ul>\n            </div>\n        </div>\n    )\n}\nexport default Footer;","import React from \"react\";\nimport {Card, Button} from \"react-bootstrap\"\n\n\nconst ProjectCard = ({project}) => {\n    const {name, description, github, deployed, img} = project\n    return (\n        <Card style={{ width: '18rem' }} className=\"mx-auto my-4\">\n  <Card.Img variant=\"top\" src={img} />\n  <Card.Body>\n    <Card.Title>{name}</Card.Title>\n    <Card.Text>\n      {description}\n    </Card.Text>\n    <a href={github} className=\"btn btn-primary\" target=\"_blank\">Github Repo</a>\n    <a href={deployed} className=\"btn btn-primary\" target=\"_blank\">Live Project</a>\n  </Card.Body>\n</Card>\n    )\n}\nexport default ProjectCard;","import React, {useState} from \"react\";\nimport ProjectCard from \"./ProjectCard\";\nimport { Row, Col, md, lg } from 'react-bootstrap';\nconst Projects = (props) => {\n    const [data, setData] = useState([{\n        name: \"Fish Guide Friend\",\n        description: \"Fish Guide Friend is an application that allows the user to find the mostly highly rated fishing guides in a specific area\",\n        github: \"https://github.com/elock721/Fish-Guide-Friend\",\n        deployed: \"https://mcui1997.github.io/Fish-Guide-Friend/\",\n        img: 'https://raw.githubusercontent.com/elock721/Portfolio-II/master/images/fish.png'\n    }, {\n        name: \"Find My Fare\",\n        description: \"Find My Fare is an application that allows the user to find the best food trucks available in the Austin Area\",\n        github: \"https://github.com/elock721/Project-2-Idea\",\n        deployed: \"https://find-my-fare.herokuapp.com/  \",\n        img: 'https://raw.githubusercontent.com/elock721/Portfolio-II/master/images/find.png'\n    }, {\n        name: \"Progressive Budget\",\n        description: \"This application the user to keep track of their budget with or with out the internet\",\n        github: \"https://github.com/elock721/Progressive-Budget\",\n        deployed: \"https://intense-garden-04775.herokuapp.com/\",\n        img: 'https://raw.githubusercontent.com/elock721/Portfolio-II/master/images/budget.png'\n    }, {\n        name: \"Note Taker Application\",\n        description: \"This note taking application allows you to write, save and delete notes\",\n        github: \"https://github.com/elock721/Note-Taker\",\n        deployed: \"https://blooming-earth-28937.herokuapp.com/\",\n        img: 'https://raw.githubusercontent.com/elock721/Portfolio-II/master/images/note.png'\n    }, {\n        name: \"Weather Forecaster\",\n        description: \"Easily get the weather forcast for any city you search\",\n        github: \"https://github.com/elock721/Weather-Dashboard\",\n        deployed: \"https://elock721.github.io/Weather-Dashboard/\",\n        img: 'https://raw.githubusercontent.com/elock721/Portfolio-II/master/images/weatherdash.png'\n    }, {\n        name: \"Day Planner\",\n        description: \"This day planning application helps you keep track of your day\",\n        github: \"https://github.com/elock721/Work-Day-Planner\",\n        deployed: \"https://elock721.github.io/Work-Day-Planner\",\n        img: 'https://raw.githubusercontent.com/elock721/Portfolio-II/master/images/dayplan.png'\n    }])\n    return (\n        <div>\n            <h1>Projects</h1>\n            <Row>\n                {data.map((project, i)=> (\n                    <Col lg={4} md={6}>\n                        <ProjectCard key={i} project={project}/>\n                    </Col>\n                ))}\n            </Row>\n        </div>\n    )\n}\nexport default Projects;","import React from 'react';\nimport logo from './logo.svg';\nimport Nav from './components/Nav'\nimport Hero from './components/Hero'\nimport Contact from './components/Contact';\nimport Footer from './components/Footer'\nimport Projects from './components/Projects'\nimport {BrowserRouter, Route} from 'react-router-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n     <Nav />\n     <Route path=\"/\" exact component={Hero} />\n     <Route path=\"/projects\" component={Projects} />\n     <Route path=\"/contact\" component={Contact} />\n     <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}